name: casanet server CI CD

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v1 
    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Bundle packages
      # NOTE, the default ARMV bin (v16.12.0) not exists in the "https://github.com/vercel/pkg-fetch/releases" page, so download V16.8 and replace name and hash to build using it 
      run: |
        mkdir casanet_bin
        mkdir .pkg-cache
        cd .pkg-cache
        export PKG_CACHE_PATH=$(pwd)
        echo $PKG_CACHE_PATH
        mkdir v3.2
        cd v3.2
        curl -L https://github.com/zeit/pkg-fetch/releases/download/v3.2/node-v16.8.0-linuxstatic-armv7 --output fetched-v16.12.0-linux-armv7 
        chmod 777 fetched-v16.12.0-linux-armv7
        cd ../../
        cd backend
        npm ci
        sed -i 's/node-v16.12.0-linuxstatic-armv7/node-v16.12.0-linux-armv7/g' node_modules/pkg-fetch/lib-es5/expected.js
        sed -i 's/e26b713c159d38b09ba8db95e4c8220653386aad7bc6ec0921f6b6b20f4710c5/51e503c90a9670c3f3be5382f229d818edbe128f989c8e7b467ed91c34386393/g' node_modules/pkg-fetch/lib-es5/expected.js
        npm run bundle
        cp -v bundle/* ../casanet_bin
    - uses: actions/upload-artifact@v2
      with:
        name: casanet_bin 
        path: casanet_bin

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    if: github.ref != 'refs/heads/master'
    steps:
    - uses: actions/checkout@v1 
    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: test backend
      run: |
        cd backend
        npm ci
        npm run test

  release:
    needs: build 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@master
      with:
        name: casanet_bin
        path: casanet_bin
    - name: Get the version
      id: get_version
      run: |
        echo ::set-output name=version::$(cat ./version.txt)
        echo ::set-output name=title::$( git log -1 --pretty=%B | sed -n '1p')
        body=$(git log -1 --pretty=%B | sed 1d)
        body="${body//'%'/'%25'}"
        body="${body//$'\n'/'%0A'}"
        body="${body//$'\r'/'%0D'}"
        echo ::set-output name=body::$body
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: ${{  steps.get_version.outputs.title }}
        body: ${{  steps.get_version.outputs.body }}
        draft: false
        prerelease: false
    - name: Upload Release Asset - arm
      id: upload-release-asset_arm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./casanet_bin/casanet_linux_arm
        asset_name: casanet_linux_arm
        asset_content_type: application/octet-stream
    - name: Upload Release Asset - win
      id: upload-release-asset_win
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./casanet_bin/casanet_win_x64.exe
        asset_name: casanet_win_x64.exe
        asset_content_type: application/octet-stream
    - name: Upload Release Asset - linux x86
      id: upload-release-asset_linux86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./casanet_bin/casanet_linux_x64
        asset_name: casanet_linux_x64
        asset_content_type: application/octet-stream
    - name: Upload Release Asset - conf
      id: upload-release-asset_lconf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./casanet_bin/casanet.json
        asset_name: casanet.json
        asset_content_type: application/octet-stream
     
  bomb_version:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Update version patch
      id: update_version
      run: |
          version=$(cat version.txt)
          echo $version
          echo "${version%.*}.$(($(echo $version | tr '.' '\n' | tail -1) + 1))" > version.txt
          version=$(cat version.txt)
          echo $version
          echo ::set-output name=version::$version
    - name: Commit and push changes
      uses: devops-infra/action-commit-push@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Update to version ${{ steps.update_version.outputs.version }}